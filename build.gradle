group = 'com.bettercloud'
version = '1.3.0'

ext.isReleaseVersion = !version.endsWith('SNAPSHOT')

if (!hasProperty('ossrhUsername')) {
    ext.ossrhUsername = ''
}
if (!hasProperty('ossrhPassword')) {
    ext.ossrhPassword = ''
}
if (!hasProperty('nexusUrl')) {
    ext.nexusUrl = ''
}
if (!hasProperty('nexusUsername')) {
    ext.nexusUsername = ''
}
if (!hasProperty('nexusPassword')) {
    ext.nexusPassword = ''
}

allprojects {
    apply plugin: 'maven'
    apply plugin: 'java-library'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'signing'
    
    group = rootProject.group
    archivesBaseName = project.name
    version = rootProject.version

    dependencies {
        testImplementation "junit:junit:$junitVersion"
        testImplementation "org.mockito:mockito-core:$mockitoVersion"
    }

    task javadocJar(type: Jar) {
        archiveClassifier.set('javadoc')
        from javadoc
    }

    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }
    
    artifacts {
        archives javadocJar, sourcesJar
    }
    
    signing {
        required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: nexusUrl) {
                    authentication(userName: nexusUsername, password: nexusPassword)
                }

                pom.project {
                    name 'BigTable ORM'
                    packaging 'jar'
                    description 'Configurable Java Entity Generation for Google BigTable'
                    url 'https://github.com/BetterCloud/bigtable-orm'

                    scm {
                        connection 'https://github.com/BetterCloud/bigtable-orm.git'
                        developerConnection 'https://github.com/BetterCloud/bigtable-orm.git'
                        url 'https://github.com/BetterCloud/bigtable-orm'
                    }

                    licenses {
                        license {
                            name 'MIT'
                            url 'https://github.com/BetterCloud/bigtable-orm/blob/master/LICENSE'
                        }
                    }

                    developers {
                        developer {
                            id 'justindriggers'
                            name 'Justin Driggers'
                            email 'justin@justindriggers.com'
                        }
                    }
                }
            }
        }
    }
}

uploadArchives {
    dependsOn = subprojects.uploadArchives
    enabled = false
}

wrapper {
    gradleVersion = '5.2.1'
}